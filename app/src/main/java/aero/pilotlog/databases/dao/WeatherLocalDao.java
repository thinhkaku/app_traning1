package aero.pilotlog.databases.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import aero.pilotlog.databases.entities.WeatherLocal;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table WEATHER_LOCAL.
*/
public class WeatherLocalDao extends AbstractDao<WeatherLocal, String> {

    public static final String TABLENAME = "WEATHERLOCAL";

    /**
     * Properties of entity WeatherLocal.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property AFIcao = new Property(0, String.class, "AFIcao", true, "AFICAO");
        public final static Property AFIata = new Property(1, String.class, "AFIata", false, "AFIATA");
        public final static Property Report = new Property(2, String.class, "Report", false, "REPORT");
        public final static Property Icon = new Property(3, String.class, "Icon", false, "ICON");
        public final static Property DataSaved = new Property(4, String.class, "DateSaved", false, "DATESAVED");
        public final static Property AFName = new Property(5, String.class, "AFName", false, "AFNAME");
        public final static Property AFCountry = new Property(6, String.class, "AFCountry", false, "AFCOUNTRY");
    };


    public WeatherLocalDao(DaoConfig config) {
        super(config);
    }
    
    public WeatherLocalDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'WEATHERLOCAL' (" + //
                "'AFICAO' TEXT PRIMARY KEY NOT NULL ," + // 0: AFIcao
                "'AFIATA' TEXT," + // 1: AFIata
                "'REPORT' TEXT," + // 2: Report
                "'ICON' TEXT," + // 3: Icon
                "'DATESAVED' TEXT," + // 4: DataSaved
                "'AFNAME' TEXT," + // 5: AFName
                "'AFCOUNTRY' TEXT);"); // 6: AFCountry
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'WEATHERLOCAL'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, WeatherLocal entity) {
        stmt.clearBindings();
 
        String AFIcao = entity.getAFIcao();
        if (AFIcao != null) {
            stmt.bindString(1, AFIcao);
        }
 
        String AFIata = entity.getAFIata();
        if (AFIata != null) {
            stmt.bindString(2, AFIata);
        }
 
        String Report = entity.getReport();
        if (Report != null) {
            stmt.bindString(3, Report);
        }
 
        String Icon = entity.getIcon();
        if (Icon != null) {
            stmt.bindString(4, Icon);
        }
 
        String DataSaved = entity.getDateSaved();
        if (DataSaved != null) {
            stmt.bindString(5, DataSaved);
        }
 
        String AFName = entity.getAFName();
        if (AFName != null) {
            stmt.bindString(6, AFName);
        }
 
        String AFCountry = entity.getAFCountry();
        if (AFCountry != null) {
            stmt.bindString(7, AFCountry);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public WeatherLocal readEntity(Cursor cursor, int offset) {
        WeatherLocal entity = new WeatherLocal( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // AFIcao
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // AFIata
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Report
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // Icon
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // DataSaved
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // AFName
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6) // AFCountry
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, WeatherLocal entity, int offset) {
        entity.setAFIcao(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setAFIata(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setReport(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setIcon(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDateSaved(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setAFName(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAFCountry(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(WeatherLocal entity, long rowId) {
        return entity.getAFIcao();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(WeatherLocal entity) {
        if(entity != null) {
            return entity.getAFIcao();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
